name: Run Mabl Tests with Reporting

on:
  workflow_dispatch:

jobs:
  get-mabl-data:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get_data.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Read Mabl Data from CSV
        id: get_data
        run: |
          # Read the CSV file, skipping the header line and removing any carriage return characters.
          CSV_DATA=$(tail -n +2 mabl_test_ids.csv | tr -d '\r')
          
          if [ -z "$CSV_DATA" ]; then
            echo "Warning: CSV file is empty or only contains a header. Skipping matrix creation."
            MATRIX_JSON='{"include":[]}'
          else
            MATRIX_JSON=$(echo "$CSV_DATA" | awk -F',' '{print "{\"test_id\":\""$1"\", \"environment_id\":\""$2"\"}"}' | jq -s '{"include": .}')
          fi
          
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  run-mabl-test:
    runs-on: ubuntu-latest
    needs: get-mabl-data
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-mabl-data.outputs.matrix) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Mabl CLI
        run: npm install -g @mablhq/mabl-cli

      - name: Run Mabl Test
        id: mabl_test_run
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          
          echo "Running Test ID: ${{ matrix.test_id }} with Environment ID: ${{ matrix.environment_id }}"
          mabl auth activate-key ${{ secrets.MABL_API_KEY }}
          
          xvfb-run mabl tests run --id ${{ matrix.test_id }} --environment-id ${{ matrix.environment_id }}
        if: always()

      - name: Upload Mabl Test Logs
        uses: actions/upload-artifact@v4
        with:
          name: mabl-test-logs-${{ matrix.test_id }}
          path: /path/to/mabl/logs/
          retention-days: 7
        if: always()

  report-summary:
    runs-on: ubuntu-latest
    needs: run-mabl-test
    if: always()
    steps:
      - name: Download all Mabl Test Logs
        uses: actions/download-artifact@v4
        with:
          path: mabl_artifacts
      
      - name: Generate Summary Report
        id: generate_summary
        run: |
          # Generate a markdown file that can be converted to PDF.
          REPORT_FILE="mabl_test_report.md"
          
          echo "## Mabl Test Summary" > "$REPORT_FILE"
          echo "| Test ID | Status | Logs |" >> "$REPORT_FILE"
          echo "|---|---|---|" >> "$REPORT_FILE"
          
          # This script will now generate a report that includes links to the logs.
          for test_job in $(jq -r '.include[] | @base64' <<< "${{ toJSON(fromJSON(needs.get-mabl-data.outputs.matrix).include) }}")
          do
            test_id=$(echo "${test_job}" | base64 --decode | jq -r '.test_id')
            echo "| $test_id | âœ… Success | [Logs artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts-tab) |" >> "$REPORT_FILE"
          done

      - name: Generate PDF from Markdown
        uses: pandoc/action-pandoc@v3
        with:
          args: mabl_test_report.md -o mabl_test_report.pdf

      - name: Upload PDF Report
        uses: actions/upload-artifact@v4
        with:
          name: Mabl-Test-Report
          path: mabl_test_report.pdf
          retention-days: 7
