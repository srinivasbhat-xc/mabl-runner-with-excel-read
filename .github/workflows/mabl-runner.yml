name: Run Mabl Tests with Consolidated PDF Report

on:
  workflow_dispatch:

jobs:
  get-mabl-data:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get_data.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Read Mabl Data from CSV
        id: get_data
        run: |
          # Read the CSV file, skipping the header line and removing any carriage return characters.
          CSV_DATA=$(tail -n +2 mabl_test_ids.csv | tr -d '\r')
          
          if [ -z "$CSV_DATA" ]; then
            echo "Warning: CSV file is empty or only contains a header. Skipping matrix creation."
            MATRIX_JSON='{"include":[]}'
          else
            MATRIX_JSON=$(echo "$CSV_DATA" | awk -F',' '{print "{\"test_id\":\""$1"\", \"environment_id\":\""$2"\"}"}' | jq -s '{"include": .}')
          fi
          
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  run-mabl-test:
    runs-on: ubuntu-latest
    needs: get-mabl-data
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-mabl-data.outputs.matrix) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Mabl CLI
        run: npm install -g @mablhq/mabl-cli

      - name: Run Mabl Test
        id: mabl_test_run
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          
          echo "Running Test ID: ${{ matrix.test_id }} with Environment ID: ${{ matrix.environment_id }}"
          # The Mabl CLI output is redirected to a log file
          xvfb-run mabl tests run --id ${{ matrix.test_id }} --environment-id ${{ matrix.environment_id }} > mabl_test_log.txt 2>&1
        if: always()
      - name: Upload Mabl Test Logs
        uses: actions/upload-artifact@v4
        with:
          name: mabl-test-logs-${{ matrix.test_id }}
          path: mabl_test_log.txt
          retention-days: 7
        if: always()

  consolidate-report:
    runs-on: ubuntu-latest
    needs: run-mabl-test
    if: always()
    steps:
      - name: Download all Mabl Test Logs
        uses: actions/download-artifact@v4
        with:
          path: mabl_artifacts
      
      - name: Generate Consolidated PDF Report
        run: |
          REPORT_FILE="mabl_test_report.md"
          echo "# Mabl Test Report" > "$REPORT_FILE"
          
          PASSED_COUNT=0
          FAILED_COUNT=0
          TOTAL_COUNT=0
          
          # Iterate over the downloaded artifacts to build the report summary.
          for artifact_dir in mabl_artifacts/mabl-test-logs-*; do
            if [ -d "$artifact_dir" ]; then
              TOTAL_COUNT=$((TOTAL_COUNT + 1))
              TEST_ID=$(basename "$artifact_dir" | sed 's/mabl-test-logs-//')
              LOG_FILE="$artifact_dir/mabl_test_log.txt"
              
              # Check for success/failure strings in the log file.
              if grep -q "Test Passed" "$LOG_FILE"; then
                STATUS="✅ Passed"
                PASSED_COUNT=$((PASSED_COUNT + 1))
              elif grep -q "Test Failed" "$LOG_FILE"; then
                STATUS="❌ Failed"
                FAILED_COUNT=$((FAILED_COUNT + 1))
              else
                STATUS="⚠️ Inconclusive"
              fi
              
              echo "## Test ID: $TEST_ID" >> "$REPORT_FILE"
              echo "### Status: $STATUS" >> "$REPORT_FILE"
              echo "### Logs" >> "$REPORT_FILE"
              echo '```' >> "$REPORT_FILE"
              cat "$LOG_FILE" >> "$REPORT_FILE"
              echo '```' >> "$REPORT_FILE"
              echo "" >> "$REPORT_FILE"
            fi
          done
          
          # Add the summary section to the top of the report.
          SUMMARY_CONTENT="
          ## Summary
          - **Total Tests:** $TOTAL_COUNT
          - **Passed:** $PASSED_COUNT
          - **Failed:** $FAILED_COUNT
          \n
          ---
          \n
          "
          # Insert the summary at the beginning of the markdown file.
          echo -e "$SUMMARY_CONTENT" | cat - "$REPORT_FILE" > temp && mv temp "$REPORT_FILE"

      - name: Generate PDF from Markdown
        uses: pandoc/action-pandoc@v3
        with:
          args: mabl_test_report.md -o mabl_test_report.pdf

      - name: Upload PDF Report
        uses: actions/upload-artifact@v4
        with:
          name: Mabl-Test-Report
          path: mabl_test_report.pdf
          retention-days: 7
